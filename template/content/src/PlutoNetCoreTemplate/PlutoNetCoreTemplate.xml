<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PlutoNetCoreTemplate</name>
    </assembly>
    <members>
        <member name="T:PlutoNetCoreTemplate.Controllers.BaseController`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:PlutoNetCoreTemplate.Controllers.BaseController`1._mediator">
            <summary>
            
            </summary>
        </member>
        <member name="F:PlutoNetCoreTemplate.Controllers.BaseController`1._logger">
            <summary>
            
            </summary>
        </member>
        <member name="M:PlutoNetCoreTemplate.Controllers.BaseController`1.#ctor(MediatR.IMediator,Microsoft.Extensions.Logging.ILogger{`0})">
            <summary>
            
            </summary>
            <param name="mediator"></param>
            <param name="logger"></param>
        </member>
        <member name="T:PlutoNetCoreTemplate.Controllers.UserController">
            <summary>
            Demo 控制器
            </summary>
        </member>
        <member name="M:PlutoNetCoreTemplate.Controllers.UserController.#ctor(MediatR.IMediator,Microsoft.Extensions.Logging.ILogger{PlutoNetCoreTemplate.Controllers.UserController},PlutoNetCoreTemplate.Application.Queries.Interfaces.IUserQueries)">
            <summary>
            
            </summary>
            <param name="mediator"></param>
            <param name="logger"></param>
            <param name="userQueries"></param>
        </member>
        <member name="M:PlutoNetCoreTemplate.Controllers.UserController.Users">
            <summary>
            获取所有用户  GET: api/users
            </summary>
            <returns></returns>
        </member>
        <member name="M:PlutoNetCoreTemplate.Controllers.UserController.Users(System.Int32)">
            <summary>
            根据id获取一个用户 GET: api/users/{id}
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PlutoNetCoreTemplate.Controllers.UserController.PostAsync(PlutoNetCoreTemplate.Application.Command.CreateUserCommand)">
            <summary>
            创建用户 POST: api/users
            </summary>
            <returns></returns>
        </member>
        <member name="M:PlutoNetCoreTemplate.Controllers.UserController.Put">
            <summary>
            全部更新
            </summary>
        </member>
        <member name="M:PlutoNetCoreTemplate.Controllers.UserController.Delete(System.Int32)">
            <summary>
            删除一个用户 DELETE: api/demo/5
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:PlutoNetCoreTemplate.Extensions.HttpContextEnricher">
            <summary>
            记录http上下文的enricher
            </summary>
        </member>
        <member name="M:PlutoNetCoreTemplate.Extensions.ServiceCollectionExtensions.AddCustomerControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            控制器
            </summary>
            <returns></returns>
        </member>
        <member name="M:PlutoNetCoreTemplate.Extensions.ServiceCollectionExtensions.AddCustomerHealthCheck(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            健康检查
            </summary>
            <returns></returns>
        </member>
        <member name="M:PlutoNetCoreTemplate.Extensions.ServiceCollectionExtensions.AddCustomerSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            API文档
            </summary>
            <returns></returns>
        </member>
        <member name="M:PlutoNetCoreTemplate.Extensions.ServiceCollectionExtensions.AddCustomerCors(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            跨域
            </summary>
            <returns></returns>
        </member>
        <member name="T:PlutoNetCoreTemplate.Filters.ModelValidateFilter">
            <summary>
            model 验证过滤器
            </summary>
        </member>
        <member name="M:PlutoNetCoreTemplate.Filters.ModelValidateFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:PlutoNetCoreTemplate.Filters.ModelValidateFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:PlutoNetCoreTemplate.HealthChecks.DatabaseHealthCheck.CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:PlutoNetCoreTemplate.HealthChecks.MemoryHealthCheck.CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:PlutoNetCoreTemplate.Middlewares.ApplicationBuilderExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:PlutoNetCoreTemplate.Middlewares.ApplicationBuilderExtensions.UseHttpContextLog(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            记录http上下文的中间件
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:PlutoNetCoreTemplate.Middlewares.ApplicationBuilderExtensions.UseExceptionProcess(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            异常处理中间件
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:PlutoNetCoreTemplate.Middlewares.HttpContextLogMiddleware">
            <summary>
            扩展日志中间件
            </summary>
        </member>
        <member name="M:PlutoNetCoreTemplate.Program.GetConfiguration(Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            加载配置
            </summary>
            <param name="env"></param>
            <returns></returns>
        </member>
        <member name="M:PlutoNetCoreTemplate.Program.GetLogConfig">
            <summary>
            日志配置
            </summary>
            <returns></returns>
        </member>
        <member name="T:PlutoNetCoreTemplate.DbContextCreateFactory">
            <summary>
            指定设计时dbcontext 工厂
            code first 迁移时使用
            </summary>
            当program中没有默认的：
            public static IHostBuilder CreateHostBuilder(string[] args) =>
            Host.CreateDefaultBuilder(args)
            .ConfigureWebHostDefaults(webBuilder =>
            {
            });
            时，必须指定如何初始化创建dbcontext
        </member>
    </members>
</doc>
