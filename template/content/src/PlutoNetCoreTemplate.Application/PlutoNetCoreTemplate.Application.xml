<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PlutoNetCoreTemplate.Application</name>
    </assembly>
    <members>
        <member name="T:PlutoNetCoreTemplate.Application.Attributes.DisableAutoSaveChangeAttribute">
            <summary>
            禁用自动SaveChange
            </summary>
            <remarks>如果禁用了，需要手动添加unitofwork的SaveChange</remarks>
        </member>
        <member name="T:PlutoNetCoreTemplate.Application.Behaviors.AutoSaveBehavior`2">
            <summary>
            
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
        </member>
        <member name="M:PlutoNetCoreTemplate.Application.Behaviors.AutoSaveBehavior`2.#ctor(PlutoData.Interface.IUnitOfWork{PlutoNetCoreTemplate.Infrastructure.EfCoreDbContext},Microsoft.Extensions.Logging.ILogger{PlutoNetCoreTemplate.Application.Behaviors.AutoSaveBehavior{`0,`1}})">
            <summary>
            
            </summary>
            <param name="uow"></param>
            <param name="logger"></param>
        </member>
        <member name="M:PlutoNetCoreTemplate.Application.Behaviors.AutoSaveBehavior`2.Handle(`0,System.Threading.CancellationToken,MediatR.RequestHandlerDelegate{`1})">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="T:PlutoNetCoreTemplate.Application.Behaviors.TransactionBehaviour`2">
            <summary>
            涉及事务的所有操作
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
        </member>
        <member name="T:PlutoNetCoreTemplate.Application.Command.CreateUserCommand">
            <summary>
            创建账户
            </summary>
        </member>
        <member name="P:PlutoNetCoreTemplate.Application.Command.CreateUserCommand.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:PlutoNetCoreTemplate.Application.Command.CreateUserCommand.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="M:PlutoNetCoreTemplate.Application.Command.CreateUserCommand.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:PlutoNetCoreTemplate.Application.Command.CreateUserCommand.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
        </member>
        <member name="T:PlutoNetCoreTemplate.Application.Command.CreateUserCommandHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:PlutoNetCoreTemplate.Application.Command.CreateUserCommandHandler.#ctor(MediatR.IMediator,PlutoData.Interface.IUnitOfWork{PlutoNetCoreTemplate.Infrastructure.EfCoreDbContext})">
            <summary>
            
            </summary>
            <param name="mediator"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:PlutoNetCoreTemplate.Application.Command.DeleteUserCommandHandler.Handle(PlutoNetCoreTemplate.Application.Command.DeleteUserCommand,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:PlutoNetCoreTemplate.Application.Command.IdentifiedCommand`2">
            <summary>
            具有辨识的command。执行前会进行查重
            </summary>
            <typeparam name="T">需要执行的command</typeparam>
            <typeparam name="R">T对应的返回类型</typeparam>
        </member>
        <member name="T:PlutoNetCoreTemplate.Application.Command.IdentityCommand.IdentifiedCommandHandler`2">
            <summary>
            标识command处理程序
            </summary>
            <typeparam name="T">target command</typeparam>
            <typeparam name="R">expected response</typeparam>
        </member>
        <member name="M:PlutoNetCoreTemplate.Application.Command.IdentityCommand.IdentifiedCommandHandler`2.Handle(PlutoNetCoreTemplate.Application.Command.IdentifiedCommand{`0,`1},System.Threading.CancellationToken)">
            <summary>
            这个方法处理命令。它只是确保不存在具有相同ID的其他请求
            重复执行将返回默认值
            </summary>
            <param name="message"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:PlutoNetCoreTemplate.Application.Command.IdentityCommand.IdentifiedCommandHandler`2.CreateResultForDuplicateRequest">
            <summary>
            如果前一个command已经处理了，直接返回
            防止重复command
            </summary>
            <returns></returns>
        </member>
        <member name="M:PlutoNetCoreTemplate.Application.Grpc.OrderGrpc.Service_A(Request,Grpc.Core.ServerCallContext)">
            <inheritdoc />
        </member>
        <member name="T:PlutoNetCoreTemplate.Application.Queries.Impls.UserQueries">
            <summary>
            仅仅查询-默认不启用追踪
            方法指定 disableTracking:true
            </summary>
        </member>
        <member name="M:PlutoNetCoreTemplate.Application.Queries.Impls.UserQueries.#ctor(PlutoData.Interface.IUnitOfWork{PlutoNetCoreTemplate.Infrastructure.EfCoreDbContext})">
            <summary>
            
            </summary>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:PlutoNetCoreTemplate.Application.Queries.Impls.UserQueries.GetUsers">
            <inheritdoc />
        </member>
        <member name="M:PlutoNetCoreTemplate.Application.Queries.Impls.UserQueries.GetUser(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:PlutoNetCoreTemplate.Application.Queries.Interfaces.IUserQueries">
            <summary>
            
            </summary>
        </member>
        <member name="M:PlutoNetCoreTemplate.Application.Queries.Interfaces.IUserQueries.GetUsers">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:PlutoNetCoreTemplate.Application.Queries.Interfaces.IUserQueries.GetUser(System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:OrderReflection">
            <summary>Holder for reflection information generated from Order.proto</summary>
        </member>
        <member name="P:OrderReflection.Descriptor">
            <summary>File descriptor for Order.proto</summary>
        </member>
        <member name="F:Request.OrderIdFieldNumber">
            <summary>Field number for the "OrderId" field.</summary>
        </member>
        <member name="F:Response.OrderIdFieldNumber">
            <summary>Field number for the "OrderId" field.</summary>
        </member>
        <member name="F:Response.UserNameFieldNumber">
            <summary>Field number for the "UserName" field.</summary>
        </member>
        <member name="P:OrderingGrpc.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:OrderingGrpc.OrderingGrpcBase">
            <summary>Base class for server-side implementations of OrderingGrpc</summary>
        </member>
        <member name="M:OrderingGrpc.BindService(OrderingGrpc.OrderingGrpcBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:OrderingGrpc.BindService(Grpc.Core.ServiceBinderBase,OrderingGrpc.OrderingGrpcBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
    </members>
</doc>
